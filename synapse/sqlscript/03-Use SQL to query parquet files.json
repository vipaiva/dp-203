{
	"name": "03-Use SQL to query parquet files",
	"properties": {
		"folder": {
			"name": "dp-203/02-Serverless SQL/02-Demo-Query files using a serverless SQL pool"
		},
		"content": {
			"query": "-- Demo: Query files using a serverless SQL pool\n-- Task: Use SQL to query parquet files\n\n /*\n Run the code, and note that it returns sales order data in the same schema as the CSV files you explored earlier. \n The schema information is embedded in the parquet file, so the appropriate column names are shown in the results.\n */\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://datalakevipaiva.dfs.core.windows.net/files/labs-dp-500/01/data/*.parquet',\n        FORMAT = 'PARQUET'\n    ) AS [result]\n\n/* \nNote that in the following query the results include order counts for all three years - the wildcard used in the BULK \npath causes the query to return data from all subfolders. The subfolders reflect partitions in the parquet data, which \nis a technique often used to optimize performance for systems that can process multiple partitions of data in parallel. \nYou can also use partitions to filter the data.\n*/\n\nSELECT YEAR(OrderDate) AS OrderYear,\n    COUNT(*) AS OrderedItems\nFROM\n    OPENROWSET(\n        BULK 'https://datalakevipaiva.dfs.core.windows.net/files/labs-dp-500/01/data/*.parquet',\n        FORMAT = 'PARQUET'\n    ) AS [result]\nGROUP BY YEAR(OrderDate)\nORDER BY OrderYear\n\n/*\nReview the results and note that they include only the sales counts for 2019 and 2020. This filtering is \nachieved by inclusing a wildcard for the partition folder value in the BULK path (year=*) and a WHERE \nclause based on the filepath property of the results returned by OPENROWSET (which in this case has the alias [result]).\n*/\n\nSELECT YEAR(OrderDate) AS OrderYear,\n    COUNT(*) AS OrderedItems\nFROM\n    OPENROWSET(\n        BULK 'https://datalakevipaiva.dfs.core.windows.net/files/labs-dp-500/01/data/*.parquet',\n        FORMAT = 'PARQUET'\n    ) AS [result]\nWHERE replace([result].filepath(1), '.snappy', '') IN ('2019', '2020')\nGROUP BY YEAR(OrderDate)\nORDER BY OrderYear\n\n\n\n-- covid cured data\nSELECT\n    top 10 *\nFROM\n    OPENROWSET(\n        BULK 'https://pandemicdatalake.blob.core.windows.net/public/curated/covid-19/ecdc_cases/latest/ecdc_cases.parquet',\n        FORMAT='PARQUET'\n    ) AS [cov]\n\n\nSelect countries_and_territories as CountryRegion, sum(cases) as Confirmed, sum(deaths) as Deaths\nFROM\n    OPENROWSET(\n        BULK 'https://pandemicdatalake.blob.core.windows.net/public/curated/covid-19/ecdc_cases/latest/ecdc_cases.parquet',\n        FORMAT='PARQUET'\n    ) AS [cov]\ngroup by countries_and_territories\n\nSelect year,  month, countries_and_territories as CountryRegion, sum(cases) as Confirmed, sum(deaths) as Deaths\nFROM\n    OPENROWSET(\n        BULK 'https://pandemicdatalake.blob.core.windows.net/public/curated/covid-19/ecdc_cases/latest/ecdc_cases.parquet',\n        FORMAT='PARQUET'\n    ) AS [cov]\ngroup by year,  month, countries_and_territories\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "master",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}